{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandra/Documents/react_projects/weather-app/src/WeatherCard/WeatherForecast.js\";\nimport React from 'react';\nimport Icon from '../Icon/index';\nimport moment from 'moment';\nexport default class WeatherForecast extends React.Component {\n  render() {\n    const weatherToday = this.props.weatherOnDate;\n    const temperature = weatherToday.temp.day;\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, moment(weatherToday).add(this.props.id, 'days').format('dddd').substr(0, 3).toUpperCase()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      size: \"small\",\n      weatherType: weatherToday.weather[0].main.toLowerCase(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    })), \">\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, Math.round(temperature), \"\\xB0C\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/aleksandra/Documents/react_projects/weather-app/src/WeatherCard/WeatherForecast.js"],"names":["React","Icon","moment","WeatherForecast","Component","render","weatherToday","props","weatherOnDate","temperature","temp","day","add","id","format","substr","toUpperCase","weather","main","toLowerCase","Math","round"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA8C;AAEzDC,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWC,aAAhC;AACA,UAAMC,WAAW,GAAGH,YAAY,CAACI,IAAb,CAAkBC,GAAtC;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMT,MAAM,CAACI,YAAD,CAAN,CAAqBM,GAArB,CAAyB,KAAKL,KAAL,CAAWM,EAApC,EAAwC,MAAxC,EAAgDC,MAAhD,CAAuD,MAAvD,EAA+DC,MAA/D,CAAsE,CAAtE,EAAyE,CAAzE,EAA4EC,WAA5E,EAAN,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,WAAW,EAAEV,YAAY,CAACW,OAAb,CAAqB,CAArB,EAAwBC,IAAxB,CAA6BC,WAA7B,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CAFJ,OAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,IAAI,CAACC,KAAL,CAAWZ,WAAX,CAAP,UAHL,CADJ;AAOD;;AAbwD","sourcesContent":["import React from 'react';\nimport Icon from '../Icon/index';\nimport moment from 'moment';\n\nexport default class WeatherForecast extends React.Component {\n    \n    render() {\n      const weatherToday = this.props.weatherOnDate;\n      const temperature = weatherToday.temp.day;\n  \n      return (\n          <section>\n              <div>{moment(weatherToday).add(this.props.id, 'days').format('dddd').substr(0, 3).toUpperCase()}</div>\n              <div><Icon size=\"small\" weatherType={weatherToday.weather[0].main.toLowerCase()} /></div>\n              ><span>{Math.round(temperature)}&#176;C</span>\n          </section>\n        );\n    }  \n  }"]},"metadata":{},"sourceType":"module"}