{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandra/Documents/react_projects/weather-app/src/WeatherCard/WeatherCard.js\";\nimport React from 'react';\nimport Icon from '../Icon/index';\nimport WeatherForecast from './WeatherForecast';\nimport { API_KEY } from '../utils';\nimport moment from 'moment';\nexport default class WeatherCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weather: {}\n    };\n    this.fetchWeatherData = this.fetchWeatherData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchWeatherData();\n  }\n\n  async fetchWeatherData() {\n    const json = await fetch(\"https://api.openweathermap.org/data/2.5/forecast/daily?q=Kyiv&units=metric&cnt=7&appid=\".concat(API_KEY));\n    const data = await json.json();\n    this.setState({\n      weather: data\n    });\n  }\n\n  render() {\n    const weather = this.state.weather;\n\n    if (!weather.list) {\n      return null;\n    }\n\n    const weatherToday = weather.list[0];\n    const temperature = weatherToday.temp.day;\n    let arr = [];\n\n    for (let i = 0; i < 7; i++) {\n      arr.push(React.createElement(WeatherForecast, {\n        weatherOnDate: weather.list[i],\n        id: i,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n\n    const city = \"Kyiv\";\n    return React.createElement(\"div\", {\n      className: \"weatherCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"todayWeather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, moment(weatherToday).format('MMMM Do YYYY').toUpperCase()), React.createElement(\"span\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, moment(weatherToday).format('dddd').toUpperCase()), React.createElement(\"div\", {\n      className: \"temperature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"temperatureToday\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, Math.round(temperature), \"\\xB0C\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      size: \"large\",\n      weatherType: weatherToday.weather[0].main.toLowerCase(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, city.toUpperCase()))), React.createElement(\"section\", {\n      className: \"forecast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, arr));\n  }\n\n}","map":{"version":3,"sources":["/Users/aleksandra/Documents/react_projects/weather-app/src/WeatherCard/WeatherCard.js"],"names":["React","Icon","WeatherForecast","API_KEY","moment","WeatherCard","Component","constructor","props","state","weather","fetchWeatherData","bind","componentDidMount","json","fetch","data","setState","render","list","weatherToday","temperature","temp","day","arr","i","push","city","format","toUpperCase","Math","round","main","toLowerCase"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Icon from '../Icon/index';\nimport WeatherForecast from './WeatherForecast';\nimport { API_KEY } from '../utils';\nimport moment from 'moment';\n\nexport default class WeatherCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { weather: {} };\n\n    this.fetchWeatherData = this.fetchWeatherData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchWeatherData();\n  }\n\n  async fetchWeatherData() {\n    const json = await fetch(`https://api.openweathermap.org/data/2.5/forecast/daily?q=Kyiv&units=metric&cnt=7&appid=${API_KEY}`);\n    const data = await json.json();\n\n    this.setState({weather: data});\n  }\n  \n  render() {\n    const { weather } = this.state;\n\n    if(!weather.list) {\n      return null;\n    }\n\n    const weatherToday = weather.list[0];\n    const temperature = weatherToday.temp.day;\n    let arr = [];\n    for(let i = 0; i < 7; i++) {\n      arr.push(<WeatherForecast weatherOnDate={weather.list[i]} id={i} key={i} />);\n    }\n    const city = \"Kyiv\";\n\n    return (\n        <div className=\"weatherCard\">\n            <section className=\"todayWeather\">\n            <div>\n              <span className=\"date\">{moment(weatherToday).format('MMMM Do YYYY').toUpperCase()}</span>\n              <span className=\"date\">{moment(weatherToday).format('dddd').toUpperCase()}</span>\n              <div className=\"temperature\">\n                <span className='temperatureToday'>{Math.round(temperature)}&#176;C</span>\n                <span><Icon size=\"large\" weatherType={weatherToday.weather[0].main.toLowerCase()} /></span>\n              </div>\n            </div>\n            <div>\n              <span>\n                {city.toUpperCase()}\n              </span>\n            </div>\n            </section>\n            <section className=\"forecast\">\n              {arr}\n            </section>\n        </div>\n      );\n  }  \n}\n\n\n"]},"metadata":{},"sourceType":"module"}