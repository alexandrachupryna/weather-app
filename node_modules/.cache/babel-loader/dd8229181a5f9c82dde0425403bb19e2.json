{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandra/Documents/react_projects/weather-app/src/WeatherCard/WeatherCard.js\";\nimport React from 'react';\nimport Icon from '../Icon/index';\nimport WeatherForecast from './WeatherForecast';\nimport { API_KEY } from '../utils';\nimport moment from 'moment';\nexport default class WeatherCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weather: {}\n    };\n    this.fetchWeatherData = this.fetchWeatherData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchWeatherData();\n  }\n\n  async fetchWeatherData() {\n    const json = await fetch(\"https://api.openweathermap.org/data/2.5/forecast/daily?q=Kyiv&units=metric&cnt=7&appid=\".concat(API_KEY));\n    const data = await json.json();\n    this.setState({\n      weather: data\n    });\n  }\n\n  render() {\n    const weather = this.state.weather;\n\n    if (!weather.list) {\n      return null;\n    }\n\n    const weatherToday = weather.list[0];\n    const temperature = weatherToday.temp.day;\n    console.log(weatherToday.weather[1].main.toLowerCase());\n    console.log(weatherToday.weather[2].main.toLowerCase());\n    console.log(weatherToday.weather[3].main.toLowerCase());\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, moment(weatherToday).format('MMMM Do YYYY'), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, Math.round(temperature), \"\\xB0C\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      size: \"large\",\n      weatherType: weatherToday.weather[0].main.toLowerCase(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })))), React.createElement(WeatherForecast, {\n      weatherOnDate: weather.list[1],\n      numberOfDay: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/aleksandra/Documents/react_projects/weather-app/src/WeatherCard/WeatherCard.js"],"names":["React","Icon","WeatherForecast","API_KEY","moment","WeatherCard","Component","constructor","props","state","weather","fetchWeatherData","bind","componentDidMount","json","fetch","data","setState","render","list","weatherToday","temperature","temp","day","console","log","main","toLowerCase","format","Math","round"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AAEA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,gBAAL;AACD;;AAED,QAAMA,gBAAN,GAAyB;AACvB,UAAMG,IAAI,GAAG,MAAMC,KAAK,kGAA2FZ,OAA3F,EAAxB;AACA,UAAMa,IAAI,GAAG,MAAMF,IAAI,CAACA,IAAL,EAAnB;AAEA,SAAKG,QAAL,CAAc;AAACP,MAAAA,OAAO,EAAEM;AAAV,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UACCR,OADD,GACa,KAAKD,KADlB,CACCC,OADD;;AAGP,QAAG,CAACA,OAAO,CAACS,IAAZ,EAAkB;AAChB,aAAO,IAAP;AACD;;AAED,UAAMC,YAAY,GAAGV,OAAO,CAACS,IAAR,CAAa,CAAb,CAArB;AACA,UAAME,WAAW,GAAGD,YAAY,CAACE,IAAb,CAAkBC,GAAtC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,YAAY,CAACV,OAAb,CAAqB,CAArB,EAAwBgB,IAAxB,CAA6BC,WAA7B,EAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYL,YAAY,CAACV,OAAb,CAAqB,CAArB,EAAwBgB,IAAxB,CAA6BC,WAA7B,EAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYL,YAAY,CAACV,OAAb,CAAqB,CAArB,EAAwBgB,IAAxB,CAA6BC,WAA7B,EAAZ;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGvB,MAAM,CAACgB,YAAD,CAAN,CAAqBQ,MAArB,CAA4B,cAA5B,CADH,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,IAAI,CAACC,KAAL,CAAWT,WAAX,CAAP,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,WAAW,EAAED,YAAY,CAACV,OAAb,CAAqB,CAArB,EAAwBgB,IAAxB,CAA6BC,WAA7B,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN,CAFF,CAFA,CADJ,EAQI,oBAAC,eAAD;AAAiB,MAAA,aAAa,EAAEjB,OAAO,CAACS,IAAR,CAAa,CAAb,CAAhC;AAAiD,MAAA,WAAW,EAAE,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAYD;;AA5CsD","sourcesContent":["import React from 'react';\nimport Icon from '../Icon/index';\nimport WeatherForecast from './WeatherForecast';\nimport { API_KEY } from '../utils';\nimport moment from 'moment';\n\nexport default class WeatherCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { weather: {} };\n\n    this.fetchWeatherData = this.fetchWeatherData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchWeatherData();\n  }\n\n  async fetchWeatherData() {\n    const json = await fetch(`https://api.openweathermap.org/data/2.5/forecast/daily?q=Kyiv&units=metric&cnt=7&appid=${API_KEY}`);\n    const data = await json.json();\n\n    this.setState({weather: data});\n  }\n  \n  render() {\n    const { weather } = this.state;\n\n    if(!weather.list) {\n      return null;\n    }\n\n    const weatherToday = weather.list[0];\n    const temperature = weatherToday.temp.day;\n    console.log(weatherToday.weather[1].main.toLowerCase());\n    console.log(weatherToday.weather[2].main.toLowerCase());\n    console.log(weatherToday.weather[3].main.toLowerCase());\n\n    return (\n        <div >\n            <section>\n              {moment(weatherToday).format('MMMM Do YYYY')}\n            <div>\n              <span>{Math.round(temperature)}&#176;C</span>\n              <span><Icon size=\"large\" weatherType={weatherToday.weather[0].main.toLowerCase()} /></span>\n            </div>\n            </section>\n            <WeatherForecast weatherOnDate={weather.list[1]} numberOfDay={1} />\n        </div>\n      );\n  }  \n}\n\n\n"]},"metadata":{},"sourceType":"module"}