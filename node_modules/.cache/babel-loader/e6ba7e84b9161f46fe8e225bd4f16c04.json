{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandra/Documents/react_projects/weather-app/src/WeatherCard/WeatherCard.js\";\nimport React from 'react';\nimport Icon from '../Icon/index';\nimport { API_KEY } from '../utils';\nimport moment from 'moment';\nexport default class WeatherCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weather: {}\n    };\n    this.fetchWeatherData = this.fetchWeatherData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchWeatherData();\n  }\n\n  async fetchWeatherData() {\n    const json = await fetch(\"https://api.openweathermap.org/data/2.5/forecast/daily?q=Kyiv&units=metric&cnt=7&appid=\".concat(API_KEY));\n    const data = await json.json();\n    this.setState({\n      weather: data\n    });\n  }\n\n  render() {\n    const weather = this.state.weather;\n\n    if (!weather.list) {\n      return null;\n    }\n\n    const weatherToday = weather.list[0];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, moment(weatherToday).format('MMMM Do YYYY'), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, weatherToday.temp.day, \"\\xB0C\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/aleksandra/Documents/react_projects/weather-app/src/WeatherCard/WeatherCard.js"],"names":["React","Icon","API_KEY","moment","WeatherCard","Component","constructor","props","state","weather","fetchWeatherData","bind","componentDidMount","json","fetch","data","setState","render","list","weatherToday","format","temp","day"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AAEA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,gBAAL;AACD;;AAED,QAAMA,gBAAN,GAAyB;AACvB,UAAMG,IAAI,GAAG,MAAMC,KAAK,kGAA2FZ,OAA3F,EAAxB;AACA,UAAMa,IAAI,GAAG,MAAMF,IAAI,CAACA,IAAL,EAAnB;AAEA,SAAKG,QAAL,CAAc;AAACP,MAAAA,OAAO,EAAEM;AAAV,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UACCR,OADD,GACa,KAAKD,KADlB,CACCC,OADD;;AAGP,QAAG,CAACA,OAAO,CAACS,IAAZ,EAAkB;AAChB,aAAO,IAAP;AACD;;AAED,UAAMC,YAAY,GAAGV,OAAO,CAACS,IAAR,CAAa,CAAb,CAArB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,MAAM,CAACgB,YAAD,CAAN,CAAqBC,MAArB,CAA4B,cAA5B,CADH,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,YAAY,CAACE,IAAb,CAAkBC,GAAzB,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN,CAFF,CAFA,CADJ,CADJ;AAWD;;AAtCsD","sourcesContent":["import React from 'react';\nimport Icon from '../Icon/index';\nimport { API_KEY } from '../utils';\nimport moment from 'moment';\n\nexport default class WeatherCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { weather: {} };\n\n    this.fetchWeatherData = this.fetchWeatherData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchWeatherData();\n  }\n\n  async fetchWeatherData() {\n    const json = await fetch(`https://api.openweathermap.org/data/2.5/forecast/daily?q=Kyiv&units=metric&cnt=7&appid=${API_KEY}`);\n    const data = await json.json();\n\n    this.setState({weather: data});\n  }\n  \n  render() {\n    const { weather } = this.state;\n\n    if(!weather.list) {\n      return null;\n    }\n\n    const weatherToday = weather.list[0];\n    return (\n        <div >\n            <section>\n              {moment(weatherToday).format('MMMM Do YYYY')}\n            <p>\n              <span>{weatherToday.temp.day}&#176;C</span>\n              <span><Icon /></span>\n            </p>\n            </section>\n        </div>\n      );\n  }  \n}\n\n\n"]},"metadata":{},"sourceType":"module"}